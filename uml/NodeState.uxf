<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>602</x>
      <y>119</y>
      <w>434</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>uk.ac.rhul.project.expectimax::Node
bg=blue
--
-gameState: GameState
-random: Random
-weight: double
-behaviour: NodeBehaviour
-behaviourGenerator: NodeBehaviourGenerator
--
#Node(GameState gameState, NodeBehaviourGenerator generator, Random random): ctor
+getGameState(): GameState
+nextNode(Heuristic heuristic): Node
+applyHeuristic(Heuristic heuristic): double
-unweightedApplyHeuristic(Heuristic heuristic): double
+generateChildren(int depth, int count4, int i): void
+getWeight(): double
+toTxt(int indent, Heuristic heuristic): String
+toString(): String
+getBaselineCount(int i): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>539</x>
      <y>392</y>
      <w>441</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>uk.ac.rhul.project.expectimax::NodeBehaviourChance
bg=magenta
--
-children: Node[]
-random: Random
--
-NodeBehaviourChance(Node[] children, Random random): ctor
+generate(GameState state, Random random, int depth, int count4, int layer): NodeBehaviour
+generated(GameState state, Random random, int depth, int count4, int layer): NodeBehaviour
+nextNode(Heuristic heuristic): Node
+applyHeuristic(Heuristic heuristic): double
+toTxt(int indent, Heuristic heuristic): String
+baseLineCount(int i): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>91</x>
      <y>392</y>
      <w>441</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>uk.ac.rhul.project.expectimax::NodeBehaviourMaximize
bg=magenta
--
-children: Node[]
--
-NodeBehaviourMaximize(Node[] children): ctor
+generate(GameState state, Random random, int depth, int count4, int layer): NodeBehaviour
+generated(GameState state, Random random, int depth, int count4, int layer): NodeBehaviour
+nextNode(Heuristic heuristic): Node
+applyHeuristic(Heuristic heuristic): double
+toTxt(int indent, Heuristic heuristic): String
+baseLineCount(int i): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>84</x>
      <y>133</y>
      <w>448</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
&lt;&lt;state&gt;&gt;
bg=magenta
uk.ac.rhul.project.expectimax::NodeBehaviour
--
--
~generated(GameState state, Random random, int depth, int count4, int layer): NodeBehaviour
~nextNode(Heuristic heuristic): Node
~applyHeuristic(Heuristic heuristic): double
~toTxt(int indent, Heuristic heuristic): String
~baseLineCount(int i): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1106</x>
      <y>154</y>
      <w>441</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
uk.ac.rhul.project.expectimax::NodeBehaviourGenerator
bg=red
--
--
~generate(GameState state, Random random, int depth, int count4, int layer): NodeBehaviour
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>161</y>
      <w>91</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
part of</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>987</x>
      <y>392</y>
      <w>448</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>uk.ac.rhul.project.expectimax::LeafNodeBehaviour
bg=magenta
--
-state: GameState
--
+LeafNodeBehaviour(GameState state): ctor
+generated(GameState state, Random random, int depth, int count4, int layer): NodeBehaviour
+nextNode(Heuristic heuristic): Node
+applyHeuristic(Heuristic heuristic): double
+toTxt(int indent, Heuristic heuristic): String
+baseLineCount(int i): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>301</x>
      <y>238</y>
      <w>21</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>301</x>
      <y>357</y>
      <w>938</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;1320.0;10.0;1320.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>742</x>
      <y>357</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>175</y>
      <w>91</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
Part of</panel_attributes>
    <additional_attributes>10.0;20.0;110.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>357</x>
      <y>266</y>
      <w>175</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Staate is chagned by calling:
  generateChildren(...) the state
  changed to depnds on the 
  NodeBehvaiourGenerator.
  
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
